// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ovsdb/ovs/core/OvsBridge.proto

package com.cotx.ovsctl.message.ovsdb.ovs.core;

import com.cotx.ovsctl.message.common.ControlProtocolVersion;
import com.cotx.ovsctl.message.common.ControllerInfo;
import com.cotx.ovsctl.message.common.ControllerInfoOrBuilder;
import com.cotx.ovsctl.message.description.BridgeDescription;

public interface OvsBridgeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:OvsBridge)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string uuid = 1;</code>
   */
  String getUuid();
  /**
   * <code>string uuid = 1;</code>
   */
  com.google.protobuf.ByteString
      getUuidBytes();

  /**
   * <code>string name = 2;</code>
   */
  String getName();
  /**
   * <code>string name = 2;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * OpenFlow properties 
   * </pre>
   *
   * <code>.BridgeDescription.FailMode failMode = 3;</code>
   */
  int getFailModeValue();
  /**
   * <pre>
   * OpenFlow properties 
   * </pre>
   *
   * <code>.BridgeDescription.FailMode failMode = 3;</code>
   */
  BridgeDescription.FailMode getFailMode();

  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControllerInfo controllers = 4;</code>
   */
  java.util.List<ControllerInfo>
      getControllersList();
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControllerInfo controllers = 4;</code>
   */
  ControllerInfo getControllers(int index);
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControllerInfo controllers = 4;</code>
   */
  int getControllersCount();
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControllerInfo controllers = 4;</code>
   */
  java.util.List<? extends ControllerInfoOrBuilder>
      getControllersOrBuilderList();
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControllerInfo controllers = 4;</code>
   */
  ControllerInfoOrBuilder getControllersOrBuilder(
          int index);

  /**
   * <pre>
   * Adds more properties 
   * </pre>
   *
   * <code>string datapathType = 5;</code>
   */
  String getDatapathType();
  /**
   * <pre>
   * Adds more properties 
   * </pre>
   *
   * <code>string datapathType = 5;</code>
   */
  com.google.protobuf.ByteString
      getDatapathTypeBytes();

  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControlProtocolVersion controlProtocols = 6;</code>
   */
  java.util.List<ControlProtocolVersion> getControlProtocolsList();
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControlProtocolVersion controlProtocols = 6;</code>
   */
  int getControlProtocolsCount();
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControlProtocolVersion controlProtocols = 6;</code>
   */
  ControlProtocolVersion getControlProtocols(int index);
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControlProtocolVersion controlProtocols = 6;</code>
   */
  java.util.List<Integer>
  getControlProtocolsValueList();
  /**
   * <pre>
   * Add control protocol version property 
   * </pre>
   *
   * <code>repeated .ControlProtocolVersion controlProtocols = 6;</code>
   */
  int getControlProtocolsValue(int index);

  /**
   * <pre>
   * other optional configs 
   * </pre>
   *
   * <code>map&lt;string, string&gt; otherConfigs = 7;</code>
   */
  int getOtherConfigsCount();
  /**
   * <pre>
   * other optional configs 
   * </pre>
   *
   * <code>map&lt;string, string&gt; otherConfigs = 7;</code>
   */
  boolean containsOtherConfigs(
          String key);
  /**
   * Use {@link #getOtherConfigsMap()} instead.
   */
  @Deprecated
  java.util.Map<String, String>
  getOtherConfigs();
  /**
   * <pre>
   * other optional configs 
   * </pre>
   *
   * <code>map&lt;string, string&gt; otherConfigs = 7;</code>
   */
  java.util.Map<String, String>
  getOtherConfigsMap();
  /**
   * <pre>
   * other optional configs 
   * </pre>
   *
   * <code>map&lt;string, string&gt; otherConfigs = 7;</code>
   */

  String getOtherConfigsOrDefault(
          String key,
          String defaultValue);
  /**
   * <pre>
   * other optional configs 
   * </pre>
   *
   * <code>map&lt;string, string&gt; otherConfigs = 7;</code>
   */

  String getOtherConfigsOrThrow(
          String key);
}
