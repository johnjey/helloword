// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ovsdb/ovs/core/OvsInterface.proto

package com.cotx.ovsctl.ovsdb.ovs.core;

import com.cotx.ovsctl.message.ovsdb.ovs.core.OvsInterfaceProto;

/**
 * Protobuf enum {@code Type}
 */
public enum Type
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *An ordinary network device, e.g. eth0 on Linux.
   * </pre>
   *
   * <code>SYSTEM = 0;</code>
   */
  SYSTEM(0),
  /**
   * <pre>
   *A simulated network device that sends and receives traffic.
   * </pre>
   *
   * <code>INTERNAL = 1;</code>
   */
  INTERNAL(1),
  /**
   * <pre>
   *A TUN/TAP device managed by Open vSwitch.
   * </pre>
   *
   * <code>TAP = 2;</code>
   */
  TAP(2),
  /**
   * <pre>
   *An Ethernet over RFC 2890 Generic Routing Encapsulation over IPv4 IPsec tunnel.
   * </pre>
   *
   * <code>GRE = 3;</code>
   */
  GRE(3),
  /**
   * <pre>
   *An Ethernet tunnel over the experimental, UDP-based VXLAN protocol.
   * </pre>
   *
   * <code>VXLAN = 4;</code>
   */
  VXLAN(4),
  /**
   * <pre>
   *A pair of virtual devices that act as a patch cable.
   * </pre>
   *
   * <code>PATCH = 5;</code>
   */
  PATCH(5),
  /**
   * <pre>
   *A DPDK net device.
   * </pre>
   *
   * <code>DPDK = 6;</code>
   */
  DPDK(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   *An ordinary network device, e.g. eth0 on Linux.
   * </pre>
   *
   * <code>SYSTEM = 0;</code>
   */
  public static final int SYSTEM_VALUE = 0;
  /**
   * <pre>
   *A simulated network device that sends and receives traffic.
   * </pre>
   *
   * <code>INTERNAL = 1;</code>
   */
  public static final int INTERNAL_VALUE = 1;
  /**
   * <pre>
   *A TUN/TAP device managed by Open vSwitch.
   * </pre>
   *
   * <code>TAP = 2;</code>
   */
  public static final int TAP_VALUE = 2;
  /**
   * <pre>
   *An Ethernet over RFC 2890 Generic Routing Encapsulation over IPv4 IPsec tunnel.
   * </pre>
   *
   * <code>GRE = 3;</code>
   */
  public static final int GRE_VALUE = 3;
  /**
   * <pre>
   *An Ethernet tunnel over the experimental, UDP-based VXLAN protocol.
   * </pre>
   *
   * <code>VXLAN = 4;</code>
   */
  public static final int VXLAN_VALUE = 4;
  /**
   * <pre>
   *A pair of virtual devices that act as a patch cable.
   * </pre>
   *
   * <code>PATCH = 5;</code>
   */
  public static final int PATCH_VALUE = 5;
  /**
   * <pre>
   *A DPDK net device.
   * </pre>
   *
   * <code>DPDK = 6;</code>
   */
  public static final int DPDK_VALUE = 6;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static com.cotx.ovsctl.message.ovsdb.ovs.core.Type valueOf(int value) {
    return forNumber(value);
  }

  public static com.cotx.ovsctl.message.ovsdb.ovs.core.Type forNumber(int value) {
    switch (value) {
      case 0: return SYSTEM;
      case 1: return INTERNAL;
      case 2: return TAP;
      case 3: return GRE;
      case 4: return VXLAN;
      case 5: return PATCH;
      case 6: return DPDK;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<com.cotx.ovsctl.message.ovsdb.ovs.core.Type>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
          com.cotx.ovsctl.message.ovsdb.ovs.core.Type> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<com.cotx.ovsctl.message.ovsdb.ovs.core.Type>() {
          public com.cotx.ovsctl.message.ovsdb.ovs.core.Type findValueByNumber(int number) {
            return com.cotx.ovsctl.message.ovsdb.ovs.core.Type.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return OvsInterfaceProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final com.cotx.ovsctl.message.ovsdb.ovs.core.Type[] VALUES = values();

  public static com.cotx.ovsctl.message.ovsdb.ovs.core.Type valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Type(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Type)
}

